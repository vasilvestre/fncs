{"version":3,"sources":["UserPanel.js","index.js"],"names":["UserPanel","email","nom","prenom","React","createElement","className","src","md5","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"gLAKO,SAASA,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,IAAKC,EAAS,EAATA,OACnC,OAAOC,IAAMC,cAAc,MAAO,CAACC,UAAW,OAC1CF,IAAMC,cAAc,MAAO,CAACC,UAAW,cACnCF,IAAMC,cAAc,MAAO,CAACC,UAAW,QACnCF,IAAMC,cAAc,MAAO,CAACC,UAAW,cACnCF,IAAMC,cAAc,MAAO,CACvBE,IAAK,mCAAqCC,IAAIP,GAC9CK,UAAW,oBAGnBF,IAAMC,cAAc,MAAO,CAACC,UAAW,gBACnCF,IAAMC,cAAc,IAAK,KAAMF,GAC/BC,IAAMC,cAAc,IAAK,KAAMH,IAEnCE,IAAMC,cAAc,MAAO,CAACC,UAAW,eACnCF,IAAMC,cAAc,IAAK,KAAMF,OA4BnDH,EAAUS,aAAe,CACrBR,MAAO,0BACPC,IAAK,YACLC,OAAQ,YC/CZO,IAASC,OAAOP,IAAMC,cAAcL,EAAW,CAAEC,MAAO,4BAA8BW,SAASC,eAAe,W","file":"static/js/main.761a1391.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmailValidator from 'email-validator';\n\n/*eslint-disable */\nexport function UserPanel({email, nom, prenom}) {\n    return React.createElement('div', {className: 'row'},\n        React.createElement('div', {className: 'col s12 m7'},\n            React.createElement('div', {className: 'card'},\n                React.createElement('div', {className: 'card-image'},\n                    React.createElement('img', {\n                        src: \"https://www.gravatar.com/avatar/\" + md5(email),\n                        className: \"responsive-img\"\n                    })\n                ),\n                React.createElement('div', {className: 'card-content'},\n                    React.createElement('p', null, prenom),\n                    React.createElement('p', null, nom),\n                ),\n                React.createElement('div', {className: 'card-action'},\n                    React.createElement('p', null, prenom)\n                ),\n            )\n        )\n    );\n}\n\nconst requiredEmailPropType = (props, propName, componentName) => {\n    const value = props[propName];\n    if (value == null || typeof value !== 'string' || !EmailValidator.validate(value)) {\n        return new TypeError(`Invalid Email Prop Value: ${value} for ${propName} in ${componentName}`);\n    }\n    return null;\n};\nconst emailPropType = (props, propName, componentName) => {\n    if (props[propName] == null) {\n        return null;\n    }\n    return requiredEmailPropType(props, propName, componentName);\n};\nemailPropType.isRequired = requiredEmailPropType;\n\nUserPanel.propTypes = {\n    email: emailPropType,\n    nom: PropTypes.string,\n    prenom: PropTypes.string\n};\n\nUserPanel.defaultProps = {\n    email: \"vasilvestre@laposte.net\",\n    nom: \"Silvestre\",\n    prenom: \"Valentin\"\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {UserPanel} from \"./UserPanel\";\n\nReactDOM.render(React.createElement(UserPanel, { email: 'vasilvestre@laposte.net' }), document.getElementById('root'));\n"],"sourceRoot":""}