{"version":3,"sources":["components/Ticket/Ticket.tsx","store/actions/ticket-actions.tsx","components/Ticket/TicketList.tsx","components/Navbar/NavbarStyle.tsx","services/AuthService.tsx","components/Login/SignIn.tsx","components/Login/SignUp.tsx","components/Login/LoginModal.tsx","components/Navbar/Navbar.tsx","components/UserTicket/UserTicketList.tsx","components/App.tsx","serviceWorker.ts","store/reducers/tickets-reducer.tsx","store/reducers/index.tsx","store/AppStore.tsx","index.tsx"],"names":["Ticket","onClick","event","props","onAddTicket","ticket","Card","CardHeader","title","this","id","CardContent","Grid","container","spacing","item","xs","departureAt","incomingAt","trainNumber","CardActions","Button","variant","size","Component","mapActionsToProps","newTicket","type","connect","TicketList","state","tickets","loading","error","fetch","then","res","json","records","map","record","fields","recordid","substring","heure_depart","heure_arrivee","destination","train_no","origin","origine","date","push","setState","catch","className","classes","root","index","key","withStyles","theme","flexGrow","NavbarStyle","useStyles","makeStyles","menuButton","marginRight","AuthService","login","user","requestOptions","method","headers","body","JSON","stringify","handleResponse","token","localStorage","setItem","logout","removeItem","response","text","data","parse","ok","status","useHistory","message","statusText","Promise","reject","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","React","useState","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","preventDefault","userLogin","onClose","window","location","replace","TextField","required","fullWidth","label","name","autoComplete","autoFocus","value","onChange","target","placeholder","FormControlLabel","control","Checkbox","color","to","Box","mt","SignUp","noValidate","sm","justify","blue","dialogPaper","minHeight","maxHeight","LoginModal","open","handleListItemClick","Dialog","aria-labelledby","exact","path","Navbar","auth","getItem","openLogin","setOpenLogin","anchorEl","setAnchorEl","Boolean","handleMenuClose","AppBar","position","Toolbar","IconButton","edge","aria-label","style","textDecoration","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","UserTicketList","App","context","hostname","match","ticketsReducer","action","filter","payload","combineReducers","appStore","createStore","rootReducer","devToolsExtension","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95b4de32.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TicketDto from '../../models/TicketDto'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport TrainTwoToneIcon from '@material-ui/icons/TrainTwoTone'\nimport DepartureBoardTwoToneIcon from '@material-ui/icons/DepartureBoardTwoTone'\nimport FlightLandTwoToneIcon from '@material-ui/icons/FlightLandTwoTone'\nimport CardActions from '@material-ui/core/CardActions'\nimport AddShoppingCartTwoToneIcon from '@material-ui/icons/AddShoppingCartTwoTone'\nimport Button from '@material-ui/core/Button'\nimport { addTicket } from '../../store/actions/ticket-actions'\nimport { connect } from 'react-redux'\n\nconst useStyles = (theme: any) => ({\n    root: {\n        flexGrow: 1,\n    },\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n})\n\ninterface TicketProps {\n    onAddTicket: any,\n    ticket: TicketDto\n}\n\nclass Ticket extends Component<TicketProps, any> {\n    public render() {\n        return (\n            <Card>\n                <CardHeader\n                    title={'Ticket number ' + this.props.ticket.id}\n                />\n                <CardContent>\n                    <Grid container spacing={2}>\n                        <Grid item xs={4}>\n                            <DepartureBoardTwoToneIcon/>\n                            Departure at {this.props.ticket.departureAt}\n                        </Grid>\n                        <Grid item xs={4}>\n                            <FlightLandTwoToneIcon/>\n                            Incoming at {this.props.ticket.incomingAt}\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TrainTwoToneIcon/>\n                            Train number {this.props.ticket.trainNumber}\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" size=\"large\" onClick={this.onClick}>\n                        <AddShoppingCartTwoToneIcon/>\n                    </Button>\n                </CardActions>\n            </Card>\n        )\n    }\n\n    private onClick = (event: any) => {\n        this.props.onAddTicket(this.props.ticket)\n    }\n}\n\nconst mapActionsToProps = {\n    onAddTicket: addTicket,\n}\n\nexport default connect(null, mapActionsToProps)(Ticket) //missing withStyles\n","import TicketDto from '../../models/TicketDto'\n\nexport const ADD_TICKET = 'tickets:addTicket'\nexport const REMOVE_TICKET = 'tickets:removeTicket'\n\nexport function addTicket(newTicket: TicketDto) {\n    return {\n        type: ADD_TICKET,\n        ticket: newTicket,\n    }\n}\nexport function removeTicket(ticketToRemove: TicketDto) {\n    return {\n        type: REMOVE_TICKET,\n        ticket: ticketToRemove\n    }\n}\n","import React, { Component } from 'react'\nimport TicketDto from '../../models/TicketDto'\nimport { withStyles } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport Ticket from './Ticket'\n\nconst URL = 'https://ressources.data.sncf.com/api/records/1.0/search/?dataset=tgvmax&sort=date&facet=date&facet=origine&facet=destination&facet=od_happy_card'\n\nconst styles = (theme: any) => ({\n    root: {\n        flexGrow: 1,\n    },\n})\n\nclass TicketList extends Component<any, any> {\n    state = {\n        tickets: [],\n        loading: true,\n        error: false,\n    }\n\n    componentDidMount(): void {\n        fetch(URL)\n            .then(res => res.json())\n            .then(json => {\n                let tickets: TicketDto[] = []\n                json.records.map((record: any) => {\n                    const fields = record.fields\n                    let ticket: TicketDto = {\n                        id: record.recordid.substring(0, 5),\n                        incomingAt: fields.heure_depart,\n                        departureAt: fields.heure_arrivee,\n                        destination: fields.destination,\n                        trainNumber: fields.train_no,\n                        origin: fields.origine,\n                        date: fields.date,\n                    }\n                    tickets.push(ticket)\n                })\n                this.setState({\n                    tickets: tickets,\n                    loading: false,\n                })\n            })\n            .catch(error => this.setState({\n                loading: false,\n                error: true,\n            }))\n    }\n\n    render(): any {\n        const { tickets, loading, error } = this.state\n        return (\n            <>\n                {loading && <div>Loading...</div>}\n                {!loading && !error &&\n                <Grid container className={this.props.classes.root} spacing={2}>\n                    {tickets.map((ticket: TicketDto, index: number) => (\n                        <Grid item xs={6} key={index}>\n                            <Ticket\n                                ticket={ticket}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>}\n                {error && <div>Error message</div>}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(TicketList)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport default class NavbarStyle {\n\n    public static useStyles = makeStyles(theme => ({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }));\n}\n","import UserLogin from '../models/UserLogin'\nimport { useHistory } from 'react-router-dom'\n\nexport const AuthService = {\n    login,\n    logout,\n}\n\nexport function login(user: UserLogin) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user),\n    }\n\n    return fetch(`https://reqres.in/api/login`, requestOptions)\n        .then(handleResponse)\n        .then((token: string) => {\n            if (token) {\n                localStorage.setItem('auth', 'true')\n                localStorage.setItem('user', JSON.stringify(user))\n                localStorage.setItem('token', token)\n            }\n\n            return user\n        })\n}\n\nexport function logout() {\n    localStorage.removeItem('auth')\n    localStorage.removeItem('user')\n    localStorage.removeItem('token')\n}\n\nfunction handleResponse(response: any) {\n    return response.text().then((text: any) => {\n        const data = text && JSON.parse(text)\n        if (!response.ok) {\n            if (response.status === 401) {\n                logout()\n                let history = useHistory()\n                history.push('/')\n            }\n\n            const error = (data && data.message) || response.statusText\n            return Promise.reject(error)\n        }\n\n        return data\n    })\n}\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link, Redirect, useLocation } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { AuthService } from '../../services/AuthService'\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function SignIn(props: any) {\n    const classes = useStyles()\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault()\n        const userLogin = { email, password }\n        AuthService\n            .login(userLogin)\n            .then(() => {\n                props.onClose()\n                window.location.replace('/');\n            })\n    }\n\n    const onChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    const onChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    return (\n        <>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form onSubmit={handleSubmit} className={classes.form}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={email}\n                            onChange={onChangeEmail}\n                            placeholder={'eve.holt@reqres.in'}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            autoComplete=\"current-password\"\n                            placeholder={'cityslicka'}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link to=\"/sign_up\">Don't have an account? Sign Up</Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={8}>\n                </Box>\n            </Container>\n        </>\n    )\n}\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport { Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function SignUp(props: any) {\n    const classes = useStyles()\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={props.onClose()}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link to=\"/sign_in\">Already have an account? Sign in</Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport { blue } from '@material-ui/core/colors'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport { Route } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    dialogPaper: {\n        minHeight: '60vh',\n        maxHeight: '80vh',\n    },\n})\n\nexport interface LoginDialogProps {\n    open: boolean\n    onClose: (value: string) => void\n}\n\nexport default function LoginModal(props: LoginDialogProps) {\n    const classes = useStyles()\n    const { onClose, open } = props\n    const handleClose = () => {\n        /* onClose(value) */\n    }\n\n    const handleListItemClick = (value: string) => {\n        onClose(value)\n    }\n\n    return (\n        <Dialog onClose={handleClose} classes={{ paper: classes.dialogPaper }} aria-labelledby=\"simple-dialog-title\"\n                open={open}>\n            <Route exact path=\"/sign_in\">\n                <SignIn\n                    onClose={handleListItemClick}\n                />\n            </Route>\n            <Route exact path=\"/sign_up\">\n                <SignUp\n                    onClose={handleListItemClick}\n                />\n            </Route>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport NavbarStyle from './NavbarStyle'\nimport { Button } from '@material-ui/core'\nimport LoginModal from '../Login/LoginModal'\nimport { AuthService } from '../../services/AuthService'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar() {\n    const classes = NavbarStyle.useStyles()\n    const auth = localStorage.getItem('auth') === 'true'\n    const [openLogin, setOpenLogin] = React.useState(false)\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleClickOpenLogin = () => {\n        setOpenLogin(true)\n    }\n\n    const handleCloseOpenLogin = () => {\n        setOpenLogin(false)\n    }\n\n    const handleMenu = (event: any) => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    const handleDisconnect = () => {\n        setAnchorEl(null)\n        AuthService.logout()\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            <Link to='/'>FNCS</Link>\n                        </Typography>\n                        {!auth && (\n                            <Button color=\"inherit\" onClick={handleClickOpenLogin}>\n                                <Link style={{ textDecoration: 'none', color: 'white' }} to=\"/sign_in\">Login</Link>\n                            </Button>\n                        )}\n                        <LoginModal open={openLogin} onClose={handleCloseOpenLogin}/>\n                        {auth && (\n                            <div>\n                                <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMenu}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle/>\n                                </IconButton>\n                                <Menu\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={open}\n                                    onClose={handleMenuClose}\n                                >\n                                    <MenuItem onClick={handleMenuClose}>\n                                        <Link to='/my_tickets'>My tickets</Link>\n                                    </MenuItem>\n                                    <MenuItem onClick={handleDisconnect}>Disconnect</MenuItem>\n                                </Menu>\n                            </div>\n                        )}\n                    </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport TicketDto from '../../models/TicketDto'\nimport Grid from '@material-ui/core/Grid'\nimport Ticket from '../Ticket/Ticket'\n\ninterface UserTicketListProps {\n    tickets: TicketDto[]\n}\n\nclass UserTicketList extends Component<UserTicketListProps, {}> {\n    public render() {\n        return (\n            <Grid container spacing={2}>\n                {this.props.tickets.map((ticket: TicketDto, index: number) => (\n                    <Grid item xs={6} key={index}>\n                        <Ticket\n                            ticket={ticket}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    }\n}\n\nexport default UserTicketList\n","import React, { Component } from 'react'\nimport 'typeface-roboto'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport TicketPage from './Ticket/TicketList'\nimport Navbar from './Navbar/Navbar'\nimport UserTicketList from './UserTicket/UserTicketList'\nimport { Container } from '@material-ui/core'\nimport { IAppState } from '../store/AppStore'\nimport { connect } from 'react-redux'\nimport TicketDto from '../models/TicketDto'\n\ninterface AppProps {\n    tickets: TicketDto[]\n}\n\ninterface AppState {\n    tickets: TicketDto[]\n}\n\nclass App extends Component<AppProps, AppState> {\n    constructor(props: AppProps, context: AppState) {\n        super(props, context)\n    }\n\n    public render() {\n        return (\n            <BrowserRouter>\n                <Navbar/>\n                <Container>\n                        <Route exact path=\"/\">\n                            <TicketPage/>\n                        </Route>\n                        <Route exact path=\"/my_tickets\">\n                            <UserTicketList\n                                tickets={this.props.tickets}\n                            />\n                        </Route>\n                </Container>\n            </BrowserRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state: IAppState) => ({\n    tickets: state.tickets,\n})\n\nexport default connect(mapStateToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import TicketDto from '../../models/TicketDto'\nimport { ADD_TICKET, REMOVE_TICKET } from '../actions/ticket-actions'\n\nconst ticketsReducer = (state: TicketDto[] = [], action: any) => {\n    let newState: TicketDto[] = [];\n    switch (action.type) {\n        case ADD_TICKET:\n            newState = [\n                ...state,\n                action.ticket\n            ];\n            return newState;\n        case REMOVE_TICKET:\n            return state.filter(ticket => ticket !== action.payload.ticket)\n        default:\n            return state\n    }\n}\nexport default ticketsReducer\n","import { combineReducers } from 'redux'\nimport ticketsReducer from './tickets-reducer'\n\nexport default combineReducers({\n    tickets: ticketsReducer\n})","import {createStore} from 'redux';\nimport rootReducer from './reducers'\nimport TicketDto from '../models/TicketDto'\n\nexport interface IAppState {\n    tickets: TicketDto[],\n}\n\nconst INITIAL_STATE: IAppState = {\n    tickets: []\n}\n\nconst appStore = createStore(\n    rootReducer,\n    INITIAL_STATE as any,\n    ((window) as any).devToolsExtension &&\n    ((window) as any).devToolsExtension());\nexport { appStore };","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { appStore } from './store/AppStore'\n\nReactDOM.render(\n    <Provider store={appStore}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}