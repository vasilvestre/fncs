{"version":3,"sources":["Template/Navbar/NavbarStyle.tsx","Template/Login/SignIn.tsx","Template/Login/SignUp.tsx","Template/Login/LoginModal.tsx","Template/Navbar/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavbarStyle","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Button","Grid","container","item","to","Box","mt","SignUp","xs","sm","justify","blue","LoginModal","props","onClose","open","Dialog","aria-labelledby","exact","path","Navbar","React","useState","auth","setOpen","anchorEl","setAnchorEl","handleMenuClose","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1487357e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nexport default class NavbarStyle {\n\n    public static useStyles = makeStyles(theme => ({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }));\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link, Route, Switch } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignIn() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/sign_up\">Don't have an account? Sign Up</Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n            </Box>\n        </Container>\n    );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link, Route, Switch } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link to=\"/sign_in\">Already have an account? Sign in</Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport { blue } from '@material-ui/core/colors'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport { Route } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n})\n\nexport interface LoginDialogProps {\n    open: boolean;\n    onClose: (value: string) => void;\n}\n\nexport default function LoginModal(props: LoginDialogProps) {\n    const classes = useStyles()\n    const { onClose, open } = props\n    const handleClose = () => {\n        /* onClose(value) */\n    }\n\n    const handleListItemClick = (value: string) => {\n        onClose(value)\n    }\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <Route exact path=\"/sign_in\">\n                <SignIn/>\n            </Route>\n            <Route exact path=\"/sign_up\">\n                <SignUp/>\n            </Route>\n        </Dialog>\n    )\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NavbarStyle from './NavbarStyle'\nimport { Button } from '@material-ui/core'\nimport LoginModal from '../Login/LoginModal'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Dialog from '@material-ui/core/Dialog'\n\nexport default function Navbar() {\n    const classes = NavbarStyle.useStyles()\n    const [auth, setAuth] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClickOpenModal = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value: string) => {\n        setOpen(false);\n    };\n\n    const handleMenu = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n\n                <Router>\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        FNCS\n                    </Typography>\n                    <Button color=\"inherit\" onClick={handleClickOpenModal}>Login</Button>\n                    <LoginModal open={open} onClose={handleClose} />\n                </Toolbar>\n                {auth && (\n                    <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleMenuClose}\n                        >\n                            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n                            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n                        </Menu>\n                    </div>\n                )}\n                </Router>\n            </AppBar>\n        </div>\n    )\n}\n","import React from 'react'\nimport 'typeface-roboto'\nimport Navbar from './Template/Navbar/Navbar'\n\nconst App: React.FC = () => {\n    return (\n        <>\n            <Navbar/>\n        </>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}