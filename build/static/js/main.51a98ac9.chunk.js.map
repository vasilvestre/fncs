{"version":3,"sources":["components/Ticket/Ticket.tsx","store/actions/ticket-actions.tsx","services/TicketService.tsx","components/Ticket/TicketList.tsx","components/Navbar/NavbarStyle.tsx","services/AuthService.tsx","components/Login/SignIn.tsx","components/Login/SignUp.tsx","components/Login/LoginModal.tsx","components/Navbar/Navbar.tsx","components/UserTicket/UserTicketList.tsx","components/UserPanel/UserPanel.tsx","components/App.tsx","serviceWorker.ts","store/reducers/tickets-reducer.tsx","store/reducers/index.tsx","store/StoreConfiguration.tsx","index.tsx"],"names":["Ticket","props","context","onClick","event","onAddTicket","ticket","state","user","JSON","parse","String","localStorage","getItem","Card","CardHeader","title","this","id","CardContent","Grid","container","spacing","item","xs","departureAt","incomingAt","trainNumber","CardActions","discountCode","Button","price","style","textDecorationLine","textDecorationStyle","variant","size","Component","mapActionsToProps","newTicket","type","connect","TicketService","getAll","a","async","fetch","res","json","tickets","records","map","record","fields","recordid","substring","heure_depart","heure_arrivee","destination","train_no","origin","origine","date","push","TicketList","loading","error","then","setState","catch","className","classes","root","index","key","withStyles","theme","flexGrow","NavbarStyle","useStyles","makeStyles","menuButton","marginRight","AuthService","login","requestOptions","method","headers","body","stringify","handleResponse","token","setItem","logout","removeItem","response","text","data","ok","status","useHistory","message","statusText","Promise","reject","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","React","useState","email","setEmail","password","setPassword","redirect","setRedirect","to","Container","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","preventDefault","userLogin","onClose","TextField","required","fullWidth","label","name","autoComplete","autoFocus","value","onChange","target","placeholder","FormControlLabel","control","Checkbox","color","textDecoration","Box","mt","SignUp","noValidate","sm","justify","blue","dialogPaper","minHeight","maxHeight","LoginModal","open","handleListItemClick","Dialog","aria-labelledby","exact","path","Navbar","auth","openLogin","setOpenLogin","anchorEl","setAnchorEl","Boolean","handleMenuClose","AppBar","position","Toolbar","IconButton","edge","aria-label","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","UserTicketList","UserPanel","setDiscountCode","defaultValue","disabled","App","window","location","hostname","match","ticketsReducer","action","filter","payload","combineReducers","INITIAL_STATE","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","devToolsExtension","persistor","persistStore","StoreConfiguration","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Cypress"],"mappings":"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","file":"static/js/main.51a98ac9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TicketDto from '../../models/TicketDto'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport TrainTwoToneIcon from '@material-ui/icons/TrainTwoTone'\nimport DepartureBoardTwoToneIcon from '@material-ui/icons/DepartureBoardTwoTone'\nimport FlightLandTwoToneIcon from '@material-ui/icons/FlightLandTwoTone'\nimport CardActions from '@material-ui/core/CardActions'\nimport AddShoppingCartTwoToneIcon from '@material-ui/icons/AddShoppingCartTwoTone'\nimport Button from '@material-ui/core/Button'\nimport { addTicket } from '../../store/actions/ticket-actions'\nimport { connect } from 'react-redux'\n\ninterface TicketProps {\n    onAddTicket: any,\n    ticket: TicketDto\n}\n\nclass Ticket extends Component<TicketProps, any> {\n\n    constructor(props: TicketProps, context: any) {\n        super(props, context)\n        this.state = {\n            user: JSON.parse(String(localStorage.getItem('user'))),\n        }\n    }\n\n    public render() {\n        return (\n            <Card>\n                <CardHeader\n                    title={'Ticket number ' + this.props.ticket.id}\n                />\n                <CardContent>\n                    <Grid container spacing={2}>\n                        <Grid item xs={4}>\n                            <DepartureBoardTwoToneIcon/>\n                            Departure at {this.props.ticket.departureAt}\n                        </Grid>\n                        <Grid item xs={4}>\n                            <FlightLandTwoToneIcon/>\n                            Incoming at {this.props.ticket.incomingAt}\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TrainTwoToneIcon/>\n                            Train number {this.props.ticket.trainNumber}\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions>\n                    {!this.state.user.discountCode &&\n                    <>\n                        Price :\n                        <Button>\n                            {this.props.ticket.price} €\n                        </Button>\n                    </>\n                    }\n                    {this.state.user.discountCode &&\n                    <>\n                        Price :\n                        <Button style={{ textDecorationLine: 'line-through', textDecorationStyle: 'solid' }}>\n                            {this.props.ticket.price}\n                        </Button>\n                        <Button>\n                            10 €\n                        </Button>\n                    </>\n                    }\n                    <Button variant=\"contained\" size=\"large\" onClick={this.onClick}>\n                        <AddShoppingCartTwoToneIcon/>\n                    </Button>\n                </CardActions>\n            </Card>\n        )\n    }\n\n    private onClick = (event: any) => {\n        this.props.onAddTicket(this.props.ticket)\n    }\n}\n\nconst mapActionsToProps = {\n    onAddTicket: addTicket,\n}\n\nexport default connect(null, mapActionsToProps)(Ticket) //missing withStyles\n","import TicketDto from '../../models/TicketDto'\n\nexport const ADD_TICKET = 'tickets:addTicket'\nexport const REMOVE_TICKET = 'tickets:removeTicket'\n\nexport function addTicket(newTicket: TicketDto) {\n    return {\n        type: ADD_TICKET,\n        ticket: newTicket,\n    }\n}\nexport function removeTicket(ticketToRemove: TicketDto) {\n    return {\n        type: REMOVE_TICKET,\n        ticket: ticketToRemove\n    }\n}\n","import { login, logout } from './AuthService'\nimport UserLogin from '../models/UserLogin'\nimport TicketDto from '../models/TicketDto'\n\nconst URL = 'https://ressources.data.sncf.com/api/records/1.0/search/?dataset=tgvmax&sort=date&facet=date&facet=origine&facet=destination&facet=od_happy_card'\n\nexport const TicketService = {\n    getAll,\n}\n\nexport async function getAll() {\n    let res = await fetch(URL)\n    let json: any = await res.json()\n    let tickets: TicketDto[] = []\n    json.records.map((record: any) => {\n        const fields = record.fields\n        let ticket: TicketDto = {\n            id: record.recordid.substring(0, 5),\n            incomingAt: fields.heure_depart,\n            departureAt: fields.heure_arrivee,\n            destination: fields.destination,\n            trainNumber: fields.train_no,\n            origin: fields.origine,\n            date: fields.date,\n            price: 20,\n        }\n        tickets.push(ticket)\n    })\n    return tickets\n}\n","import React, { Component } from 'react'\nimport TicketDto from '../../models/TicketDto'\nimport { withStyles } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport Ticket from './Ticket'\nimport { TicketService } from '../../services/TicketService'\n\nconst styles = (theme: any) => ({\n    root: {\n        flexGrow: 1,\n    },\n})\n\nclass TicketList extends Component<any, any> {\n    state = {\n        tickets: [],\n        loading: true,\n        error: false,\n    }\n\n    componentDidMount(): void {\n        TicketService.getAll()\n            .then((tickets: TicketDto[]) => {\n                this.setState({\n                    tickets: tickets,\n                    loading: false,\n                })\n            })\n            .catch(error => this.setState({\n                loading: false,\n                error: true,\n            }))\n    }\n\n    render(): any {\n        const { tickets, loading, error } = this.state\n        return (\n            <>\n                {loading && <div>Loading...</div>}\n                {!loading && !error &&\n                <Grid container id=\"ticket-list-container\" className={this.props.classes.root} spacing={2}>\n                    {tickets.map((ticket: TicketDto, index: number) => (\n                        <Grid item xs={6} key={index}>\n                            <Ticket\n                                ticket={ticket}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>}\n                {error && <div>Error message</div>}\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(TicketList)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport default class NavbarStyle {\n\n    public static useStyles = makeStyles(theme => ({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }));\n}\n","import UserLogin from '../models/UserLogin'\nimport { useHistory } from 'react-router-dom'\n\nexport const AuthService = {\n    login,\n    logout,\n}\n\nexport function login(user: UserLogin) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user),\n    }\n\n    return fetch(`https://reqres.in/api/login`, requestOptions)\n        .then(handleResponse)\n        .then((token: string) => {\n            if (token) {\n                localStorage.setItem('auth', 'true')\n                localStorage.setItem('user', JSON.stringify(user))\n                localStorage.setItem('token', token)\n            }\n\n            return user\n        })\n}\n\nexport function logout() {\n    localStorage.removeItem('auth')\n    localStorage.removeItem('user')\n    localStorage.removeItem('token')\n}\n\nfunction handleResponse(response: any) {\n    return response.text().then((text: any) => {\n        const data = text && JSON.parse(text)\n        if (!response.ok) {\n            if (response.status === 401) {\n                logout()\n                let history = useHistory()\n                history.push('/')\n            }\n\n            const error = (data && data.message) || response.statusText\n            return Promise.reject(error)\n        }\n\n        return data\n    })\n}\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link, Redirect, useLocation } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { AuthService } from '../../services/AuthService'\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function SignIn(props: any) {\n    const classes = useStyles()\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n    const [redirect, setRedirect] = React.useState(false)\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault()\n        const userLogin = { email, password }\n        AuthService\n            .login(userLogin)\n            .then(() => {\n                props.onClose()\n                setRedirect(true)\n            })\n    }\n\n    const onChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    const onChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    return (\n        <>\n            {redirect && <Redirect to='/'/>}\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form onSubmit={handleSubmit} className={classes.form}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={email}\n                            onChange={onChangeEmail}\n                            placeholder={'eve.holt@reqres.in'}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            autoComplete=\"current-password\"\n                            placeholder={'cityslicka'}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link style={{ textDecoration: 'none', color: 'white' }} to=\"/sign_up\">Don't have an account? Sign Up</Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={8}>\n                </Box>\n            </Container>\n        </>\n    )\n}\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport { Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function SignUp(props: any) {\n    const classes = useStyles()\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={props.onClose()}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link style={{ textDecoration: 'none', color: 'white' }} to=\"/sign_in\">Already have an account? Sign in</Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport { blue } from '@material-ui/core/colors'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport { Route } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    dialogPaper: {\n        minHeight: '60vh',\n        maxHeight: '80vh',\n    },\n})\n\nexport interface LoginDialogProps {\n    open: boolean\n    onClose: (value: string) => void\n}\n\nexport default function LoginModal(props: LoginDialogProps) {\n    const classes = useStyles()\n    const { onClose, open } = props\n    const handleClose = () => {\n        /* onClose(value) */\n    }\n\n    const handleListItemClick = (value: string) => {\n        onClose(value)\n    }\n\n    return (\n        <Dialog onClose={handleClose} classes={{ paper: classes.dialogPaper }} aria-labelledby=\"simple-dialog-title\"\n                open={open}>\n            <Route exact path=\"/sign_in\">\n                <SignIn\n                    onClose={handleListItemClick}\n                />\n            </Route>\n            <Route exact path=\"/sign_up\">\n                <SignUp\n                    onClose={handleListItemClick}\n                />\n            </Route>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport NavbarStyle from './NavbarStyle'\nimport { Button } from '@material-ui/core'\nimport LoginModal from '../Login/LoginModal'\nimport { AuthService } from '../../services/AuthService'\nimport { Link } from 'react-router-dom'\n\ninterface NavbarProps {\n    openLogin: boolean\n}\n\nexport default function Navbar(props: NavbarProps) {\n    const classes = NavbarStyle.useStyles()\n    const auth = localStorage.getItem('auth') === 'true'\n    const [openLogin, setOpenLogin] = React.useState(props.openLogin)\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n    const open = Boolean(anchorEl)\n\n    const handleClickOpenLogin = () => {\n        setOpenLogin(true)\n    }\n\n    const handleCloseOpenLogin = () => {\n        setOpenLogin(false)\n    }\n\n    const handleMenu = (event: any) => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    const handleDisconnect = () => {\n        setAnchorEl(null)\n        AuthService.logout()\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link style={{ textDecoration: 'none', color: 'white' }} to='/'>FNCS</Link>\n                    </Typography>\n                    {!auth && (\n                        <Button color=\"inherit\" onClick={handleClickOpenLogin}>\n                            <Link style={{ textDecoration: 'none', color: 'white' }} to=\"/sign_in\">Login</Link>\n                        </Button>\n                    )}\n                    <LoginModal open={openLogin} onClose={handleCloseOpenLogin}/>\n                    {auth && (\n                        <div>\n                            <IconButton\n                                id=\"user-button\"\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle/>\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleMenuClose}\n                            >\n                                <MenuItem onClick={handleMenuClose}>\n                                    <Link style={{ textDecoration: 'none', color: 'black' }} to='/my_tickets'>My tickets</Link>\n                                </MenuItem>\n                                <MenuItem onClick={handleMenuClose}>\n                                    <Link style={{ textDecoration: 'none', color: 'black' }} to='/account'>My account</Link>\n                                </MenuItem>\n                                <MenuItem onClick={handleDisconnect}>Disconnect</MenuItem>\n                            </Menu>\n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport TicketDto from '../../models/TicketDto'\nimport Grid from '@material-ui/core/Grid'\nimport Ticket from '../Ticket/Ticket'\n\ninterface UserTicketListProps {\n    tickets: TicketDto[]\n}\n\nclass UserTicketList extends Component<UserTicketListProps, {}> {\n    public render() {\n        return (\n            <Grid container spacing={2}>\n                {this.props.tickets.map((ticket: TicketDto, index: number) => (\n                    <Grid item xs={6} key={index}>\n                        <Ticket\n                            ticket={ticket}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    }\n}\n\nexport default UserTicketList\n","import React from 'react'\nimport User from '../../models/User'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function UserPanel(props: any) {\n    const classes = useStyles()\n    const user: User = JSON.parse(String(localStorage.getItem('user')))\n    const [discountCode, setDiscountCode] = React.useState(String(user.discountCode))\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault()\n        user.discountCode = discountCode\n        localStorage.setItem('user', JSON.stringify(user))\n    }\n\n    const onChangeDiscountCode = (event: any) => {\n        setDiscountCode(event.target.value)\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className={classes.form}>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                defaultValue={user.email}\n                placeholder={'eve.holt@reqres.in'}\n                disabled={true}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                name=\"discountCode\"\n                label=\"discountCode\"\n                type=\"text\"\n                id=\"discountCode\"\n                value={discountCode}\n                onChange={onChangeDiscountCode}\n                autoFocus\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n                Enregistrer\n            </Button>\n        </form>\n    )\n}\n\n","import React, { Component } from 'react'\nimport 'typeface-roboto'\nimport { BrowserRouter, Link, Redirect, Route } from 'react-router-dom'\nimport TicketPage from './Ticket/TicketList'\nimport Navbar from './Navbar/Navbar'\nimport UserTicketList from './UserTicket/UserTicketList'\nimport { Button, Container } from '@material-ui/core'\nimport { IAppState } from '../store/StoreConfiguration'\nimport { connect } from 'react-redux'\nimport TicketDto from '../models/TicketDto'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport UserPanel from './UserPanel/UserPanel'\n\ninterface AppProps {\n    tickets: TicketDto[]\n}\n\ninterface AppState {\n    tickets: TicketDto[],\n    auth: boolean\n}\n\nclass App extends Component<AppProps, AppState> {\n    constructor(props: AppProps, context: AppState) {\n        super(props, context)\n        this.state = {\n            ...context,\n            auth: localStorage.getItem('auth') === 'true'\n        }\n    }\n\n    public render() {\n        return (\n            <BrowserRouter>\n                {!this.state.auth && <Redirect to='/sign_in' />}\n                <Navbar\n                    openLogin={!this.state.auth}\n                />\n                <Container>\n                    <Route exact path=\"/\">\n                        <TicketPage/>\n                    </Route>\n                    <Route exact path=\"/my_tickets\">\n                        <UserTicketList\n                            tickets={this.props.tickets}\n                        />\n                    </Route>\n                    <Route exact path=\"/account\">\n                        <UserPanel/>\n                    </Route>\n                </Container>\n            </BrowserRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state: IAppState) => ({\n    tickets: state.tickets,\n})\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import TicketDto from '../../models/TicketDto'\nimport { ADD_TICKET, REMOVE_TICKET } from '../actions/ticket-actions'\n\nconst ticketsReducer = (state: TicketDto[] = [], action: any) => {\n    let newState: TicketDto[] = [];\n    switch (action.type) {\n        case ADD_TICKET:\n            newState = [\n                ...state,\n                action.ticket\n            ];\n            return newState;\n        case REMOVE_TICKET:\n            return state.filter(ticket => ticket !== action.payload.ticket)\n        default:\n            return state\n    }\n}\nexport default ticketsReducer\n","import { combineReducers } from 'redux'\nimport ticketsReducer from './tickets-reducer'\n\nexport default combineReducers({\n    tickets: ticketsReducer\n})","import {createStore} from 'redux';\nimport rootReducer from './reducers'\nimport TicketDto from '../models/TicketDto'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nexport interface IAppState {\n    tickets: TicketDto[],\n}\n\nconst INITIAL_STATE: IAppState = {\n    tickets: []\n}\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default () => {\n    let store = createStore(\n        persistedReducer,\n        INITIAL_STATE as any,\n        ((window) as any).devToolsExtension &&\n        ((window) as any).devToolsExtension())\n    let persistor = persistStore(store)\n    return {store, persistor}\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport StoreConfiguration from './store/StoreConfiguration'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst {store, persistor} = StoreConfiguration()\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App/>\n        </PersistGate>\n    </Provider>\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\n// expose store when run in Cypress\n// @ts-ignore\nif (window.Cypress) {\n    // @ts-ignore\n    window.store = store\n}\n"],"sourceRoot":""}